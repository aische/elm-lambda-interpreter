
let true = \t.\f.t
let false = \t.\f.f
let not = \p.@@p false true
let and = \a.\b.@@a b false
let or = \a.\b.@@a true b
let xor = \a.\b.@@a @@b false true b
let if = \p.\a.\b.@@p a b

let zero = \f.\x.x
let succ = \n.\f.\x.@f @@n f x
let add = \m.\n.\f.\x.@@m f @@n f x
let mult = \m.\n.\f.@m@n f
let pred = \n.\f.\x.@@@n \g.\h.@h@g f \u.x \u.u
let minus = \m.\n.@@n pred m

let iszero = \n.@@n \x.false true
let lesseq = \m.\n.@ iszero @@minus m n
let equals = \m.\n. @@and @@lesseq m n @@lesseq n m

let one = @succ zero
let two = @succ @succ zero
let three = @succ two
let four = @succ three

let main = @@mult three @@minus four one
@@main nachfolger end




